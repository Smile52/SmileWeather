apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'



android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"


    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures{
        dataBinding = true
    }


    /*   productFlavors{
           version1 {
               applicationId "com.xxx.xxx1"
               manifestPlaceholders=[
                       icLauncher: "@mipmap/ic_launcher_version1",
                       appId     : "com.xxx.version1",
                       appName   : "@string/app_name_version1",
                       appScheme : "@string/app_scheme_version1"            ]
           }
           version2 {
               applicationId "com.xxx.xxx2"
               manifestPlaceholders=[
                       icLauncher: "@mipmap/ic_launcher_version2",
                       appId     : "com.xxx.version2",
                       appName   : "@string/app_name_version2",
                       appScheme : "@string/app_scheme_version2"            ]
           }
       }

       *//*签名文件*//*
       signingConfigs{
           version1 {
               storeFile file("../key/xxx.keystore")
               storePassword "xxxxxx"
               keyAlias "xxx"
               keyPassword "xxxxxx"
           }

           version2 {
               storeFile file("../key/xxx.keystore")
               storePassword "xxxxxxx"
               keyAlias "xxx"
               keyPassword "xxxxxxx"
           }
       }*/

}

dependencies {

    def lifecycle_version = "2.2.0"
    def roomVersion = '2.2.2'



    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.3.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'


    api "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    // Optional : Kotlin extension (https://d.android.com/kotlin/ktx)
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    // liveData
    api "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // viewModel
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    api "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"



    api "com.squareup.retrofit2:retrofit:2.6.2"

    api 'com.squareup.retrofit2:converter-gson:2.5.0'
    //okhttp提供的请求日志拦截器
    api 'com.squareup.okhttp3:logging-interceptor:3.14.4'
    api 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'
    api 'io.reactivex.rxjava2:rxandroid:2.1.1'
    api "io.reactivex:rxkotlin:0.60.0"
    api "io.reactivex:rxandroid:1.2.1"

}
